---
import type { z } from "zod";
import type { ProductResult } from "../utils/schemas";

import ShopifyImage from "./ShopifyImage.svelte";
import Money from "./Money.svelte";
import AddToCartForm from "../components/AddToCartForm.svelte";

export interface Props {
  product: z.infer<typeof ProductResult>;
}
const { product } = Astro.props as Props;
const firstVariant = product?.variants.nodes[0];
---

<div class="group flex flex-col overflow-hidden rounded-lg p-2">
  <div class="flex justify-between">
    <div class="relative">
      <ShopifyImage
        classList="h-full w-full border-r border-gray-100 group-hover:"
        loading="eager"
        image={product?.featuredImage}
        sizes={`
      (min-width: 1540px) 348px,
      (min-width: 1280px) 284px,
      (min-width: 1040px) 309px,
      (min-width: 780px) 348px,
      (min-width: 640px) 284px,
      calc(100vw - 48px)
    `}
      />
    </div>
    <div class="flex flex-col justify-between gap-3 px-5 py-6 text-zinc-700">
      <h3 class="text-xl font-bold">{product?.title}</h3>
      <div class="grid grid-cols-2 gap-2">
        <div>
          <p class="text-sm">Post Karma</p>
          <p class="font-bold">2500</p>
        </div>
        <div>
          <p class="text-sm">Age</p>
          <p class="font-bold">2 months</p>
        </div>
      </div>
      <div>
        <p class="text-sm">Comment Karma</p>
        <p class="font-bold">1000</p>
      </div>
    </div>
  </div>
  <AddToCartForm
    client:load
    price={product?.variants.nodes[0].price}
    variantId={firstVariant?.id}
    variantQuantityAvailable={firstVariant?.quantityAvailable}
    variantAvailableForSale={firstVariant?.availableForSale}
  />
</div>
